"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/ChatWidget/MessageBubble.tsx":
/*!*****************************************************!*\
  !*** ./src/components/ChatWidget/MessageBubble.tsx ***!
  \*****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _barrel_optimize_names_motion_framer_motion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=motion!=!framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n/* harmony import */ var _barrel_optimize_names_Bot_User_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Bot,User!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/user.js\");\n/* harmony import */ var _barrel_optimize_names_Bot_User_lucide_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=Bot,User!=!lucide-react */ \"(app-pages-browser)/./node_modules/lucide-react/dist/esm/icons/bot.js\");\n/* harmony import */ var react_markdown__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! react-markdown */ \"(app-pages-browser)/./node_modules/react-markdown/lib/index.js\");\n/* harmony import */ var _MCQComponent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MCQComponent */ \"(app-pages-browser)/./src/components/ChatWidget/MCQComponent.tsx\");\n/* harmony import */ var _ChartComponent__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ChartComponent */ \"(app-pages-browser)/./src/components/ChatWidget/ChartComponent.tsx\");\n/* harmony import */ var _GanttChart__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./GanttChart */ \"(app-pages-browser)/./src/components/ChatWidget/GanttChart.tsx\");\n/* harmony import */ var _FundGrid__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FundGrid */ \"(app-pages-browser)/./src/components/ChatWidget/FundGrid.tsx\");\n/* harmony import */ var _SimpleChart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SimpleChart */ \"(app-pages-browser)/./src/components/ChatWidget/SimpleChart.tsx\");\n/* harmony import */ var _CompactChart__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./CompactChart */ \"(app-pages-browser)/./src/components/ChatWidget/CompactChart.tsx\");\n/* harmony import */ var _LeadCollectionForm__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./LeadCollectionForm */ \"(app-pages-browser)/./src/components/ChatWidget/LeadCollectionForm.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\nconst DynamicQuiz = (param)=>{\n    let { quizData, onComplete } = param;\n    _s();\n    const [currentQuestionIndex, setCurrentQuestionIndex] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [answers, setAnswers] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    if (!quizData || !quizData.questions) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"text-red-500\",\n            children: \"Invalid quiz data\"\n        }, void 0, false, {\n            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n            lineNumber: 34,\n            columnNumber: 12\n        }, undefined);\n    }\n    const questions = quizData.questions;\n    const currentQuestion = questions[currentQuestionIndex];\n    // Convert backend question format to MCQComponent format\n    const formattedQuestion = {\n        id: currentQuestion.id,\n        question: currentQuestion.text,\n        type: \"single\",\n        options: currentQuestion.options.map((option, index)=>({\n                id: \"option_\".concat(index),\n                text: option,\n                value: option\n            }))\n    };\n    const handleAnswer = (questionId, selectedOptions)=>{\n        const newAnswers = {\n            ...answers,\n            [questionId]: selectedOptions\n        };\n        setAnswers(newAnswers);\n        // Move to next question or complete\n        if (currentQuestionIndex < questions.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n        } else {\n            // Calculate risk score based on backend scoring system\n            const totalScore = calculateRiskScore(newAnswers, questions);\n            const riskLevel = getRiskLevel(totalScore, quizData.scoring);\n            // Send result back to chat\n            onComplete(\"Risk Assessment Complete: \".concat(riskLevel, \" profile determined based on your responses.\"));\n        }\n    };\n    const calculateRiskScore = (answers, questions)=>{\n        let score = 0;\n        questions.forEach((question, index)=>{\n            const answer = answers[question.id];\n            if (answer && answer.length > 0) {\n                // Score based on option position (1-4 points per question)\n                const optionIndex = question.options.indexOf(answer[0]);\n                score += optionIndex + 1;\n            }\n        });\n        return score;\n    };\n    const getRiskLevel = (score, scoring)=>{\n        for (const [range, level] of Object.entries(scoring)){\n            const [min, max] = range.split(\"-\").map(Number);\n            if (score >= min && score <= max) {\n                return level;\n            }\n        }\n        return \"Medium Risk\"; // Default fallback\n    };\n    const progress = (currentQuestionIndex + 1) / questions.length * 100;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"bg-white rounded-lg p-4 border border-gray-200\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mb-4\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        className: \"text-lg font-semibold text-gray-900\",\n                        children: quizData.title\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 98,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-sm text-gray-600 mt-1\",\n                        children: quizData.description\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 99,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-3\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"flex justify-between text-xs text-gray-500 mb-1\",\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: [\n                                            \"Question \",\n                                            currentQuestionIndex + 1,\n                                            \" of \",\n                                            questions.length\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                        lineNumber: 104,\n                                        columnNumber: 13\n                                    }, undefined),\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                        children: [\n                                            Math.round(progress),\n                                            \"%\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                        lineNumber: 105,\n                                        columnNumber: 13\n                                    }, undefined)\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                lineNumber: 103,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-full bg-gray-200 rounded-full h-2\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"bg-blue-600 h-2 rounded-full transition-all duration-300\",\n                                    style: {\n                                        width: \"\".concat(progress, \"%\")\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                    lineNumber: 108,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                lineNumber: 107,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 102,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                lineNumber: 97,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_MCQComponent__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                question: formattedQuestion,\n                onAnswer: handleAnswer,\n                className: \"mb-0\"\n            }, void 0, false, {\n                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                lineNumber: 117,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n        lineNumber: 95,\n        columnNumber: 5\n    }, undefined);\n};\n_s(DynamicQuiz, \"ILatPGejwxoTHpjxrCZSBw++8gE=\");\n_c = DynamicQuiz;\nconst MessageBubble = (param)=>{\n    let { message, isLatest = false, onSendMessage } = param;\n    const isUser = message.role === \"user\";\n    const isAssistant = message.role === \"assistant\";\n    // Function to parse and render comparison charts\n    const renderComparisonChart = (content)=>{\n        try {\n            // Try to extract structured data first (from tool JSON response)\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"comparison\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                if (toolData.data && Array.isArray(toolData.data)) {\n                    // Extract metric from the data structure\n                    const firstItem = toolData.data[0];\n                    const metric = Object.keys(firstItem).find((key)=>key !== \"Fund Name\") || \"Performance\";\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 w-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GanttChart__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                            title: toolData.title || \"Fund Performance Comparison\",\n                            data: toolData.data,\n                            metric: metric,\n                            className: \"w-full max-w-full\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 144,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 143,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n            // Fallback: Extract fund data from text content\n            const lines = content.split(\"\\n\");\n            const fundData = [];\n            let metric = \"365D Return\";\n            lines.forEach((line)=>{\n                const match = line.match(/(.+?):\\s*(\\d+\\.?\\d*)%/);\n                if (match) {\n                    const [, fundName, value] = match;\n                    fundData.push({\n                        \"Fund Name\": fundName.trim(),\n                        [metric]: parseFloat(value)\n                    });\n                }\n            });\n            if (fundData.length >= 2) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mt-4 w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_GanttChart__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                        title: \"Fund Performance Comparison\",\n                        data: fundData,\n                        metric: metric,\n                        className: \"w-full max-w-full\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 174,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                    lineNumber: 173,\n                    columnNumber: 11\n                }, undefined);\n            }\n        } catch (error) {\n            console.error(\"Error rendering comparison chart:\", error);\n        }\n        return null;\n    };\n    // Function to render performance analysis charts\n    const renderPerformanceChart = (content)=>{\n        try {\n            // Try to extract structured data first (from tool JSON response)\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"performance_analysis\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                if (toolData.chart_data && toolData.chart_data.series) {\n                    const periods = Array.isArray(toolData.chart_data.xAxis) ? toolData.chart_data.xAxis : [];\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 w-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChartComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                            title: toolData.title || \"Performance Analysis\",\n                            data: {\n                                labels: periods,\n                                datasets: toolData.chart_data.series.map((fund, index)=>({\n                                        label: fund.fund_name,\n                                        data: periods.map((p)=>{\n                                            const raw = fund[p];\n                                            const num = typeof raw === \"number\" ? raw : parseFloat(String(raw));\n                                            return isNaN(num) ? 0 : num;\n                                        }),\n                                        color: [\n                                            \"#3b82f6\",\n                                            \"#10b981\",\n                                            \"#f59e0b\",\n                                            \"#ef4444\",\n                                            \"#8b5cf6\"\n                                        ][index] || \"#6b7280\"\n                                    }))\n                            },\n                            type: \"bar\",\n                            className: \"w-full max-w-full\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 200,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 199,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n            // Fallback: Extract multi-period performance data from text\n            const fundMatches = content.match(/(\\w+\\s+\\w+\\s+Fund):/g);\n            if (!fundMatches || fundMatches.length < 2) return null;\n            const funds = fundMatches.map((f)=>f.replace(\":\", \"\").trim());\n            const periods = [\n                \"365D\",\n                \"2Y\",\n                \"3Y\"\n            ];\n            const colors = [\n                \"#3b82f6\",\n                \"#10b981\",\n                \"#f59e0b\"\n            ];\n            const datasets = funds.map((fund, index)=>{\n                const data = [];\n                periods.forEach((period)=>{\n                    const regex = new RegExp(\"\".concat(period, \":\\\\s*(\\\\d+\\\\.?\\\\d*)%\"));\n                    const match = content.match(regex);\n                    data.push(match ? parseFloat(match[1]) : 0);\n                });\n                return {\n                    label: fund,\n                    data,\n                    color: colors[index] || \"#6b7280\"\n                };\n            });\n            const chartData = {\n                labels: periods,\n                datasets\n            };\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-3\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ChartComponent__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    title: \"Multi-Period Performance Analysis\",\n                    data: chartData,\n                    type: \"bar\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                    lineNumber: 252,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                lineNumber: 251,\n                columnNumber: 9\n            }, undefined);\n        } catch (error) {\n            console.error(\"Error rendering performance chart:\", error);\n        }\n        return null;\n    };\n    // Function to render beautiful fund recommendation cards and clean the content\n    const renderRecommendationChart = (content)=>{\n        console.log(\"\\uD83D\\uDD0D Full content received length:\", content.length);\n        try {\n            // Clean the content first - remove extra whitespace and normalize\n            const cleanContent = content.trim().replace(/\\s+/g, \" \");\n            console.log(\"\\uD83D\\uDD0D Cleaned content sample:\", cleanContent.substring(0, 200) + \"...\");\n            let toolData = null;\n            let jsonStartIndex = -1;\n            let jsonEndIndex = -1;\n            // Strategy 1: Find JSON starting with {\"type\": \"recommendation\"\n            const startIndex = cleanContent.indexOf('{\"type\": \"recommendation\"');\n            if (startIndex !== -1) {\n                console.log(\"\\uD83D\\uDD0D Found JSON start at position:\", startIndex);\n                jsonStartIndex = startIndex;\n                // Find the end of this JSON object by counting braces\n                let braceCount = 0;\n                let endIndex = startIndex;\n                let inString = false;\n                let escapeNext = false;\n                for(let i = startIndex; i < cleanContent.length; i++){\n                    const char = cleanContent[i];\n                    if (escapeNext) {\n                        escapeNext = false;\n                        continue;\n                    }\n                    if (char === \"\\\\\") {\n                        escapeNext = true;\n                        continue;\n                    }\n                    if (char === '\"' && !escapeNext) {\n                        inString = !inString;\n                        continue;\n                    }\n                    if (!inString) {\n                        if (char === \"{\") {\n                            braceCount++;\n                        } else if (char === \"}\") {\n                            braceCount--;\n                            if (braceCount === 0) {\n                                endIndex = i + 1;\n                                jsonEndIndex = endIndex;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (braceCount === 0 && endIndex > startIndex) {\n                    const jsonString = cleanContent.substring(startIndex, endIndex);\n                    console.log(\"\\uD83D\\uDD0D Extracted JSON string length:\", jsonString.length);\n                    console.log(\"\\uD83D\\uDD0D JSON string preview:\", jsonString.substring(0, 100) + \"...\");\n                    try {\n                        toolData = JSON.parse(jsonString);\n                        console.log(\"✅ Successfully parsed JSON:\", toolData);\n                    } catch (parseError) {\n                        console.log(\"❌ JSON parse error:\", parseError);\n                        console.log(\"❌ Problematic JSON:\", jsonString.substring(0, 500));\n                    }\n                }\n            }\n            // Strategy 2: Manual extraction if JSON parsing fails\n            if (!toolData) {\n                console.log(\"\\uD83D\\uDD0D Trying manual extraction...\");\n                // Look for fund data patterns in the text\n                const fundPattern = /JBS\\s+([^:]+):\\s*NAV\\s*PKR\\s*([\\d.]+),\\s*1Y\\s*Return\\s*([\\d.]+)%/g;\n                const funds = [];\n                let match;\n                while((match = fundPattern.exec(content)) !== null){\n                    const [, name, nav, returnValue] = match;\n                    funds.push({\n                        name: \"JBS \".concat(name.trim(), \" Fund\"),\n                        nav: parseFloat(nav),\n                        performance: {\n                            return_365d: parseFloat(returnValue),\n                            return_ytd: 0\n                        },\n                        fees: {\n                            expense_ratio: 2.0,\n                            management_fee: 1.5\n                        },\n                        details: {\n                            risk_profile: \"High\"\n                        }\n                    });\n                }\n                if (funds.length > 0) {\n                    console.log(\"✅ Manual extraction successful:\", funds);\n                    toolData = {\n                        type: \"recommendation\",\n                        recommended_funds: funds\n                    };\n                }\n            }\n            // If we found valid data, render the chart and return clean content\n            if (toolData && toolData.recommended_funds && Array.isArray(toolData.recommended_funds)) {\n                console.log(\"✅ Rendering chart with\", toolData.recommended_funds.length, \"funds\");\n                // Remove the JSON from the original content\n                let cleanTextContent = content;\n                if (jsonStartIndex !== -1 && jsonEndIndex !== -1) {\n                    cleanTextContent = content.substring(0, jsonStartIndex).trim();\n                    console.log(\"\\uD83E\\uDDF9 Cleaned text content (removed JSON)\");\n                }\n                return {\n                    chart: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-3\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CompactChart__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            funds: toolData.recommended_funds,\n                            title: \"\\uD83D\\uDCCA Fund Performance\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 388,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 387,\n                        columnNumber: 13\n                    }, undefined),\n                    cleanContent: cleanTextContent\n                };\n            } else {\n                console.log(\"❌ No valid tool data found\");\n                return {\n                    chart: null,\n                    cleanContent: content\n                };\n            }\n            // Fallback: Extract fund data from text content\n            const lines = content.split(\"\\n\");\n            const funds = [];\n            let currentFund = {};\n            lines.forEach((line)=>{\n                const fundMatch = line.match(/^\\d+\\.\\s*(.+?)$/);\n                if (fundMatch) {\n                    if (currentFund.name) {\n                        funds.push(currentFund);\n                    }\n                    currentFund = {\n                        name: fundMatch[1].replace(/\\*\\*/g, \"\"),\n                        performance: {},\n                        fees: {},\n                        details: {\n                            risk_profile: \"High\"\n                        }\n                    };\n                }\n                const navMatch = line.match(/NAV:\\s*PKR\\s*(\\d+\\.?\\d*)/);\n                if (navMatch) {\n                    currentFund.nav = parseFloat(navMatch[1]);\n                }\n                const returnMatch = line.match(/365D Return:\\s*(\\d+\\.?\\d*)%/);\n                if (returnMatch) {\n                    currentFund.performance.return_365d = parseFloat(returnMatch[1]);\n                }\n                const expenseMatch = line.match(/Expense Ratio:\\s*(\\d+\\.?\\d*)%/);\n                if (expenseMatch) {\n                    currentFund.fees.expense_ratio = parseFloat(expenseMatch[1]);\n                }\n            });\n            if (currentFund.name) {\n                funds.push(currentFund);\n            }\n            if (funds.length >= 2) {\n                return {\n                    chart: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-3\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_CompactChart__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                            funds: funds,\n                            title: \"\\uD83D\\uDCCA Fund Performance\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 444,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 443,\n                        columnNumber: 13\n                    }, undefined),\n                    cleanContent: content.split(\"\\n\").slice(0, -5).join(\"\\n\").trim() // Remove last few lines with fund details\n                };\n            }\n        } catch (error) {\n            console.error(\"Error rendering recommendation chart:\", error);\n        }\n        return {\n            chart: null,\n            cleanContent: content\n        };\n    };\n    // Function to render market insights\n    const renderMarketInsights = (content)=>{\n        try {\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"market_insights\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                if (toolData.insights && toolData.insights.top_performers) {\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_FundGrid__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            funds: toolData.insights.top_performers.map((fund)=>({\n                                    name: fund.name,\n                                    nav: fund.nav,\n                                    performance: {\n                                        return_365d: fund.return_365d\n                                    },\n                                    fees: {\n                                        expense_ratio: fund.expense_ratio\n                                    },\n                                    details: {\n                                        risk_profile: fund.risk_profile\n                                    }\n                                })),\n                            title: \"\\uD83D\\uDCCA Top Performing Funds\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 468,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 467,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error rendering market insights:\", error);\n        }\n        return null;\n    };\n    // Function to render consistency analysis\n    const renderConsistencyAnalysis = (content)=>{\n        try {\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"consistency_analysis\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                if (toolData.consistency_ranking) {\n                    // Convert to SimpleChart format\n                    const funds = toolData.consistency_ranking.map((fund)=>({\n                            name: fund.fund_name,\n                            nav: 100,\n                            performance: {\n                                return_365d: fund.consistency_score * 100 // Convert to percentage\n                            },\n                            fees: {\n                                expense_ratio: 2.0\n                            },\n                            details: {\n                                risk_profile: \"High\"\n                            }\n                        }));\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SimpleChart__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            funds: funds,\n                            title: \"\\uD83C\\uDFAF Fund Consistency Scores\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 508,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 507,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error rendering consistency analysis:\", error);\n        }\n        return null;\n    };\n    // Function to render correlation analysis\n    const renderCorrelationAnalysis = (content)=>{\n        try {\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"correlation_analysis\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                if (toolData.correlation_matrix) {\n                    // Convert to SimpleChart format\n                    const funds = toolData.correlation_matrix.map((item, index)=>({\n                            name: \"\".concat(item.fund1, \" vs \").concat(item.fund2),\n                            nav: 100,\n                            performance: {\n                                return_365d: Math.abs(item.correlation) * 100 // Convert correlation to percentage\n                            },\n                            fees: {\n                                expense_ratio: 2.0\n                            },\n                            details: {\n                                risk_profile: \"Medium\"\n                            }\n                        }));\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SimpleChart__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            funds: funds,\n                            title: \"\\uD83D\\uDCCA Fund Correlation Matrix\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 542,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 541,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error rendering correlation analysis:\", error);\n        }\n        return null;\n    };\n    // Function to render portfolio allocation\n    const renderPortfolioAllocation = (content)=>{\n        try {\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"portfolio\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                console.log(\"Portfolio data:\", toolData);\n                if (toolData.allocation && Array.isArray(toolData.allocation)) {\n                    // Convert to SimpleChart format with correct data mapping\n                    const funds = toolData.allocation.map((item)=>({\n                            name: item.fund_name || \"Unknown Fund\",\n                            nav: parseFloat(item.nav) || 100,\n                            performance: {\n                                return_365d: parseFloat(item.percentage) || 0 // Use percentage as performance metric\n                            },\n                            fees: {\n                                expense_ratio: parseFloat(item.expense_ratio) || 2.0\n                            },\n                            details: {\n                                risk_profile: item.risk_category || \"Medium\",\n                                amount: item.amount || 0,\n                                rationale: item.rationale || \"\"\n                            }\n                        }));\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-2 max-w-sm\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_SimpleChart__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            funds: funds,\n                            title: toolData.title || \"Portfolio Allocation\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 582,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 581,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error rendering portfolio allocation:\", error);\n        }\n        return null;\n    };\n    // Function to render smart recommendation chart\n    const renderSmartRecommendationChart = (content)=>{\n        try {\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"smart_recommendation\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                if (toolData.recommendations && Array.isArray(toolData.recommendations)) {\n                    // Convert recommendations to fund format for FundGrid\n                    const funds = toolData.recommendations.map((rec)=>({\n                            name: rec.fund.name,\n                            nav: parseFloat(rec.fund.nav) || 0,\n                            performance: {\n                                return_365d: parseFloat(rec.fund.return_365d) || 0,\n                                return_ytd: parseFloat(rec.fund.return_ytd) || 0\n                            },\n                            fees: {\n                                expense_ratio: parseFloat(rec.fund.expense_ratio) || 0,\n                                management_fee: parseFloat(rec.fund.management_fee) || 0\n                            },\n                            details: {\n                                risk_profile: rec.fund.risk_profile || \"Medium\"\n                            }\n                        }));\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"mt-4 w-full\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_FundGrid__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            funds: funds,\n                            title: toolData.title || \"Smart Fund Recommendations\",\n                            className: \"w-full max-w-full\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                            lineNumber: 622,\n                            columnNumber: 15\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 621,\n                        columnNumber: 13\n                    }, undefined);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error rendering smart recommendation chart:\", error);\n        }\n        return null;\n    };\n    // Function to render lead collection form\n    const renderLeadCollectionForm = (content)=>{\n        try {\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"lead_collection\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const toolData = JSON.parse(jsonMatch[0]);\n                const handleSubmit = async (formData)=>{\n                    if (onSendMessage) {\n                        onSendMessage(\"LEAD_SUBMIT: \".concat(JSON.stringify(formData)));\n                    }\n                };\n                const handleDecline = ()=>{\n                    if (onSendMessage) {\n                        onSendMessage(\"LEAD_DECLINE\");\n                    }\n                };\n                const handleClose = ()=>{\n                    if (onSendMessage) {\n                        onSendMessage(\"LEAD_CLOSE\");\n                    }\n                };\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"mt-4 w-full\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_LeadCollectionForm__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        title: toolData.title,\n                        description: toolData.description,\n                        formFields: toolData.form_fields,\n                        submitText: toolData.submit_text,\n                        privacyNote: toolData.privacy_note,\n                        declineOption: toolData.decline_option,\n                        onSubmit: handleSubmit,\n                        onDecline: handleDecline,\n                        onClose: handleClose\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 664,\n                        columnNumber: 13\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                    lineNumber: 663,\n                    columnNumber: 11\n                }, undefined);\n            }\n        } catch (error) {\n            console.error(\"Error rendering lead collection form:\", error);\n        }\n        return null;\n    };\n    // Function to clean content by removing JSON data and detailed listings\n    const cleanContentFromJson = (content, responseType)=>{\n        try {\n            // Find JSON object in the content\n            const jsonMatch = content.match(/\\{[\\s\\S]*\"type\":\\s*\"[^\"]+\"[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                const beforeJson = content.substring(0, content.indexOf(jsonMatch[0])).trim();\n                // For recommendation types, always return minimal text regardless of beforeJson\n                if (responseType === \"recommendation\" || responseType === \"smart_recommendation\") {\n                    return responseType === \"recommendation\" ? \"Fund recommendations\" : \"Personalized fund recommendations\";\n                }\n                // Create simplified content based on response type\n                if (responseType === \"comparison\") {\n                    return \"Performance comparison\";\n                } else if (responseType === \"performance_analysis\") {\n                    return \"Performance analysis\";\n                } else if (responseType === \"portfolio\") {\n                    return \"Portfolio allocation\";\n                } else if (responseType === \"market_insights\") {\n                    return \"Market insights\";\n                } else if (responseType === \"lead_collection\") {\n                    return \"Would you like to connect with our investment experts?\";\n                } else if (responseType === \"lead_submitted\") {\n                    return \"Thank you for your interest!\";\n                } else if (responseType === \"lead_declined\") {\n                    return \"No problem at all!\";\n                } else if (responseType === \"lead_collection_declined\") {\n                    return \"I understand your preference.\";\n                } else if (responseType === \"lead_already_submitted\") {\n                    return \"Thank you for your previous submission.\";\n                } else {\n                    // For other types, return the text before JSON or a generic message\n                    return beforeJson || \"Here are your results\";\n                }\n            }\n        } catch (error) {\n            console.error(\"Error cleaning content:\", error);\n        }\n        return content;\n    };\n    // Check if this is a recommendation response and get clean content\n    const recommendationResult = message.response_type === \"recommendation\" ? renderRecommendationChart(message.content) : null;\n    // Clean content for all response types that have JSON data\n    const shouldCleanContent = [\n        \"recommendation\",\n        \"performance_analysis\",\n        \"market_insights\",\n        \"consistency_analysis\",\n        \"correlation_analysis\",\n        \"portfolio\",\n        \"comparison\",\n        \"smart_recommendation\",\n        \"lead_collection\",\n        \"lead_submitted\",\n        \"lead_declined\",\n        \"lead_collection_declined\",\n        \"lead_already_submitted\"\n    ].includes(message.response_type || \"\");\n    const displayContent = (recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.cleanContent) || (shouldCleanContent ? cleanContentFromJson(message.content, message.response_type || \"\") : message.content);\n    const recommendationChart = (recommendationResult === null || recommendationResult === void 0 ? void 0 : recommendationResult.chart) || null;\n    const formatTime = (timestamp)=>{\n        return new Intl.DateTimeFormat(\"en-US\", {\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: true\n        }).format(new Date(timestamp));\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_motion_framer_motion__WEBPACK_IMPORTED_MODULE_9__.motion.div, {\n        initial: {\n            opacity: 0,\n            y: 20,\n            scale: 0.95\n        },\n        animate: {\n            opacity: 1,\n            y: 0,\n            scale: 1\n        },\n        transition: {\n            duration: 0.3,\n            ease: \"easeOut\"\n        },\n        className: \"flex items-start gap-2 mb-3 \".concat(isUser ? \"flex-row-reverse\" : \"flex-row\"),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"\\n        flex-shrink-0 w-7 h-7 rounded-full flex items-center justify-center text-white text-sm font-medium\\n        \".concat(isUser ? \"bg-primary-500\" : \"bg-gradient-to-br from-emerald-500 to-emerald-600\", \"\\n      \"),\n                children: isUser ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Bot_User_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                    size: 14\n                }, void 0, false, {\n                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                    lineNumber: 763,\n                    columnNumber: 19\n                }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Bot_User_lucide_react__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                    size: 14\n                }, void 0, false, {\n                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                    lineNumber: 763,\n                    columnNumber: 40\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                lineNumber: 756,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col \".concat(isUser ? \"items-end\" : \"items-start\", \" max-w-[85%]\"),\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"\\n          chat-message relative max-w-[280px]\\n          \".concat(isUser ? \"chat-message-user\" : \"chat-message-assistant\", \"\\n        \"),\n                        children: isAssistant ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: message.response_type === \"quiz\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-1 max-w-lg\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(DynamicQuiz, {\n                                    quizData: (()=>{\n                                        try {\n                                            // Extract JSON from message content (it should be appended by backend)\n                                            const jsonMatch = message.content.match(RegExp('\\\\{[^{}]*\"type\"\\\\s*:\\\\s*\"quiz\"[^{}]*\\\\}', \"s\"));\n                                            if (jsonMatch) {\n                                                return JSON.parse(jsonMatch[0]);\n                                            }\n                                            // Fallback: try parsing the entire content as JSON\n                                            return JSON.parse(message.content);\n                                        } catch (e) {\n                                            console.error(\"Failed to parse quiz JSON:\", e);\n                                            return null;\n                                        }\n                                    })(),\n                                    onComplete: (result)=>{\n                                        console.log(\"✅ Quiz completed:\", result);\n                                        // Send the result back to the chat for processing\n                                        if (onSendMessage) {\n                                            onSendMessage(result);\n                                        } else {\n                                            console.error(\"❌ Cannot send message - onSendMessage not provided\");\n                                        }\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                    lineNumber: 781,\n                                    columnNumber: 19\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                lineNumber: 780,\n                                columnNumber: 17\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_markdown__WEBPACK_IMPORTED_MODULE_12__.Markdown, {\n                                        className: \"prose prose-sm max-w-none\",\n                                        components: {\n                                            p: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                                    className: \"mb-2 last:mb-0\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 813,\n                                                    columnNumber: 44\n                                                }, void 0);\n                                            },\n                                            ul: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                                                    className: \"list-disc list-inside mb-2 space-y-1\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 814,\n                                                    columnNumber: 45\n                                                }, void 0);\n                                            },\n                                            ol: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ol\", {\n                                                    className: \"list-decimal list-inside mb-2 space-y-1\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 815,\n                                                    columnNumber: 45\n                                                }, void 0);\n                                            },\n                                            li: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                                                    className: \"text-sm\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 816,\n                                                    columnNumber: 45\n                                                }, void 0);\n                                            },\n                                            strong: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                                    className: \"font-semibold text-gray-900\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 817,\n                                                    columnNumber: 49\n                                                }, void 0);\n                                            },\n                                            em: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"em\", {\n                                                    className: \"italic\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 818,\n                                                    columnNumber: 45\n                                                }, void 0);\n                                            },\n                                            code: (param)=>{\n                                                let { children } = param;\n                                                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                                                    className: \"px-1 py-0.5 bg-gray-100 rounded text-xs font-mono\",\n                                                    children: children\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                                    lineNumber: 820,\n                                                    columnNumber: 25\n                                                }, void 0);\n                                            }\n                                        },\n                                        children: displayContent\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                        lineNumber: 810,\n                                        columnNumber: 19\n                                    }, undefined),\n                                    message.response_type === \"comparison\" && renderComparisonChart(message.content),\n                                    message.response_type === \"performance_analysis\" && renderPerformanceChart(message.content),\n                                    message.response_type === \"recommendation\" && recommendationChart,\n                                    message.response_type === \"smart_recommendation\" && renderSmartRecommendationChart(message.content),\n                                    message.response_type === \"market_insights\" && renderMarketInsights(message.content),\n                                    message.response_type === \"consistency_analysis\" && renderConsistencyAnalysis(message.content),\n                                    message.response_type === \"correlation_analysis\" && renderCorrelationAnalysis(message.content),\n                                    message.response_type === \"portfolio\" && renderPortfolioAllocation(message.content),\n                                    message.response_type === \"lead_collection\" && renderLeadCollectionForm(message.content)\n                                ]\n                            }, void 0, true)\n                        }, void 0, false) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                            children: !message.content.startsWith(\"Risk Profile Complete:\") && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                className: \"whitespace-pre-wrap\",\n                                children: message.content\n                            }, void 0, false, {\n                                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                lineNumber: 846,\n                                columnNumber: 17\n                            }, undefined)\n                        }, void 0, false)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 769,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"text-xs text-gray-500 mt-1 \".concat(isUser ? \"text-right\" : \"text-left\"),\n                        children: [\n                            formatTime(message.timestamp),\n                            message.response_type && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                className: \"ml-2 px-2 py-0.5 bg-blue-100 text-blue-700 rounded text-xs\",\n                                children: message.response_type\n                            }, void 0, false, {\n                                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                                lineNumber: 856,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                        lineNumber: 853,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n                lineNumber: 767,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\AMC_Chatbot\\\\front-end\\\\src\\\\components\\\\ChatWidget\\\\MessageBubble.tsx\",\n        lineNumber: 749,\n        columnNumber: 5\n    }, undefined);\n};\n_c1 = MessageBubble;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MessageBubble);\nvar _c, _c1;\n$RefreshReg$(_c, \"DynamicQuiz\");\n$RefreshReg$(_c1, \"MessageBubble\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/ChatWidget/MessageBubble.tsx\n"));

/***/ })

});